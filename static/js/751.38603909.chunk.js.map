{"version":3,"file":"static/js/751.38603909.chunk.js","mappings":"sLAmBA,IAduB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,UAAWC,EAAAA,EAAAA,cACXC,GAAE,kBAAaN,GACfO,MAAO,CAAEC,KAAMN,GAHjB,UAKE,eAAIE,UAAWC,EAAAA,EAAAA,mBAAf,SAA2CJ,KAGhD,C,mICZKQ,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,+BACE,gBAAIN,UAAWC,EAAAA,EAAAA,cAAf,WACE,eAAID,UAAWC,EAAAA,EAAAA,eAAf,yCACCK,EAAMC,KAAI,gBAAGX,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,SAACW,EAAA,EAAD,CAAyBZ,GAAIA,EAAIC,MAAOA,GAAnBD,EADZ,QAMlB,EAED,IAEAS,EAAWI,cAAgB,CACzBH,MAAO,I,uBCYT,EA3B2B,WACzB,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOJ,EAAP,KAAcK,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IAEXI,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,GAAS,SAAAS,GAAS,cAAQD,EAAKE,QAAb,IAClBR,GAAW,EACZ,IACAS,OAAM,SAAAR,GACLC,EAASD,EAAMS,QAChB,IACAC,SAAQ,kBAAMX,GAAW,EAAjB,GACZ,GAAE,CAACF,EAAUE,EAAYE,KAGxB,gCACGH,IAAW,SAAC,UAAD,KACZ,SAAC,EAAD,CAAYN,MAAOA,EAAOQ,MAAOA,MAGtC,ECzBD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C,+DCaD,UAbe,WACb,OACE,SAAC,KAAD,CACEW,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAc7B,EAAAA,EAAAA,aAGnB,C,wLCbK8B,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAlB,EAAc,mCAAG,4FACT,QACC,OAFQ,SAILc,EAASK,IAAT,oBAHJ,QAGI,YAFH,SAFQ,uBAIpBjB,EAJoB,EAIpBA,KAJoB,kBAMrBA,GANqB,2CAAH,qDASdkB,EAAe,mCAAG,WAAMzC,GAAN,yFACNmC,EAASK,IAAT,iBAAuBxC,IADjB,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfmB,EAAW,mCAAG,WAAMC,GAAN,yFACFR,EAASK,IAAT,8BAAoCG,IADlC,uBACjBpB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXqB,EAAiB,mCAAG,WAAM5C,GAAN,yFACRmC,EAASK,IAAT,iBAAuBxC,EAAvB,aADQ,uBACvBuB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBsB,EAAoB,mCAAG,WAAM7C,GAAN,yFACXmC,EAASK,IAAT,iBAAuBxC,EAAvB,aADW,uBAC1BuB,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qD,qBChCjC,KAAgB,SAAW,yBAAyB,cAAgB,8BAA8B,eAAiB,+BAA+B,mBAAqB,mCAAmC,cAAgB,8BAA8B,YAAc,4B","sources":["components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/TrandingMoviesPage/TrandingMoviesPage.jsx","components/pages/HomePage/HomePage.jsx","shared/Loader/LoaderSpinner.jsx","shared/api/api.js","webpack://react-homework-template/./src/components/styles.module.css?c458"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport styles from '../styles.module.css';\n\nconst MoviesListItem = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <Link\n      className={styles.trending_link}\n      to={`/movies/${id}`}\n      state={{ from: location }}\n    >\n      <li className={styles.trending_list_item}>{title}</li>\n    </Link>\n  );\n};\n\nexport default MoviesListItem;\n\nMoviesListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  //   onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from '../styles.module.css';\n\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nconst MoviesList = ({ items }) => {\n  return (\n    <>\n      <ul className={styles.trending_list}>\n        <h2 className={styles.trending_title}>Trending movies of the week</h2>\n        {items.map(({ id, title }) => (\n          <MoviesListItem key={id} id={id} title={title} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProprs = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\n\nimport MoviesList from '../MoviesList/MoviesList';\nimport Loader from '../../shared/Loader/LoaderSpinner';\nimport { trendingMovies } from '../../shared/api/api';\n\nconst TrandingMoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    trendingMovies()\n      .then(data => {\n        setItems(prevItems => [...data.results]);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => setLoading(false));\n  }, [setItems, setLoading, setError]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <MoviesList items={items} error={error} />\n    </>\n  );\n};\n\nexport default TrandingMoviesPage;\n","import TrandingMoviesPage from 'components/TrandingMoviesPage/TrandingMoviesPage';\n\nconst HomePage = () => {\n  return <TrandingMoviesPage />;\n};\n\nexport default HomePage;\n","import { Dna } from 'react-loader-spinner';\n\nimport styles from '../../components/styles.module.css';\n\nconst Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"200\"\n      width=\"200\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass={styles.dna_wrapper}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '294902272f63193a25077f4f88077abd',\n  },\n});\n\nexport const trendingMovies = async () => {\n  const media_type = 'movie';\n  const time_window = 'week';\n\n  const { data } = await instance.get(`/trending/${media_type}/${time_window}`);\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const searchMovieIdCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const searchMovieIdReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"nav_link\":\"styles_nav_link__-t6D5\",\"trending_list\":\"styles_trending_list__FYZV3\",\"trending_title\":\"styles_trending_title__T84Dt\",\"trending_list_item\":\"styles_trending_list_item__mppYX\",\"trending_link\":\"styles_trending_link__iADKj\",\"dna_wrapper\":\"styles_dna_wrapper__O8WQr\"};"],"names":["id","title","location","useLocation","className","styles","to","state","from","MoviesList","items","map","MoviesListItem","defaultProprs","useState","setItems","loading","setLoading","error","setError","useEffect","trendingMovies","then","data","prevItems","results","catch","message","finally","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","instance","axios","baseURL","params","api_key","get","getMovieDetails","searchMovie","query","searchMovieIdCast","searchMovieIdReviews"],"sourceRoot":""}